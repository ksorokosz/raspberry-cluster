---
# tasks file for roles/cluster

# reference: git clone https://github.com/rak8s/rak8s.git
# reference: https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/high-availability/

- name: "INFO | host {{ ansible_ssh_host }}"
  debug:
    msg: |
       System: {{ ansible_system }}
       OS Family: {{ linux_architecture }}
       Distribution: {{ ansible_distribution }}
       Release: {{ ansible_distribution_release }}
       Architecture: {{ ansible_architecture }}
       IPV4: {{ ansible_default_ipv4.address }}
  tags:
    - cluster

- name: "Install ca package on debian systems"
  apt:
    name: ca-certificates
    state: present
    update_cache: yes
    force_apt_get: yes
  become_user: root
  tags:
    - cluster

- name: "PREPARE | Disable Swap"
  shell: dphys-swapfile swapoff && dphys-swapfile uninstall && update-rc.d dphys-swapfile remove
  ignore_errors: True
  become_user: root
  tags:
    - cluster

- name: "RESET | Reset Kubernetes Master"
  shell: kubeadm reset -f
  register: kubeadm_reset
  become_user: root
  tags:
    - cluster

- name: Deploy Docker daemon.json.
  copy:
    src: files/daemon.json
    dest: /etc/docker/daemon.json
  become_user: root
  tags:
    - cluster

- name: Ensure docker deamon is restarted
  service:
    name: docker
    state: restarted
  become_user: root
  tags:
    - cluster

# Only for the first master node
- name: "DEBUG | Initialize Master {{ kubernetes_version }}"
  debug:
    msg: kubeadm init --control-plane-endpoint "{{ lb_address }}:{{ lb_port }}" --upload-certs --apiserver-cert-extra-sans *.k8s.cluster.com --token={{ token }} --kubernetes-version={{ kubernetes_version }} --pod-network-cidr={{ podnet }} --certificate-key {{ certificate_key }}
  when: kubeadm_reset is succeeded and {{ inventory_hostname }} == 'master1'
  tags:
    - cluster

- name: "INIT | Initialize Master {{ kubernetes_version }}"
  shell: kubeadm init --control-plane-endpoint "{{ lb_address }}:{{ lb_port }}" --upload-certs --apiserver-cert-extra-sans *.k8s.cluster.com --token={{ token }} --kubernetes-version={{ kubernetes_version }} --pod-network-cidr={{ podnet }}
  register: kubeadm_init
  when: kubeadm_reset is succeeded and {{ inventory_hostname }} == 'master1'
  become_user: root
  tags:
    - cluster

- name: "INIT | Install Flannel (Networking)"
  shell: "curl -sSL https://rawgit.com/coreos/flannel/master/Documentation/kube-flannel.yml | kubectl create -f -"
  args:
    warn: false
  when: {{ inventory_hostname }} == 'master1'
  tags:
    - cluster



# Join the rest
- name: "INIT | Join to master {{ kubernetes_version }}"
  shell: kubeadm join 192.168.0.50:6443 --token 69ed18.ccfss6dkqpuhqsu9 --discovery-token-ca-cert-hash {{ token_sha256 }} --control-plane --certificate-key {{ certificate_key }}
  when: {{ inventory_hostname }} != 'master1'
  become_user: root
  tags:
    - cluster

- name: "INIT | Create Kubernetes config directory"
  file:
    path: /home/{{ ansible_ssh_user }}/.kube/
    state: directory
    owner: root
    group: root
    mode: 0755
  become_user: root
  tags:
    - cluster

- name: "INIT | Copy admin.conf to config directory"
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/{{ ansible_ssh_user }}/.kube/config
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: 0755
    remote_src: yes
    backup: yes
  when: kubeadm_init
  become_user: root
  tags:
    - cluster

